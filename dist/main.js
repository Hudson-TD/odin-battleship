(()=>{var e={496:(e,t,a)=>{const{removeMatchingObjects:r}=a(225);e.exports={computerLegalAttack:function(e){let t=[],a=[];for(let e=0;e<10;e++)for(let t=0;t<10;t++)a.push({x:e,y:t});e.board.missedShots.forEach((e=>{t.push(e)})),e.board.hits.forEach((e=>{t.push(e)}));let n=r(a,t),i=n[Math.floor(Math.random()*n.length)];return console.log(`Random attack: ${i}`),i}}},817:(e,t,a)=>{const{game:r}=a(404);function n(e,t,a,r){document.querySelector(".main-content-container").setAttribute("class","hidden");const n=document.createElement("div");n.classList.add("game-over-container");const i=document.createElement("h1");i.classList.add("game-over-header"),i.setAttribute("id",`${a}`),i.textContent=t,n.appendChild(i);const s=document.createElement("img");s.classList.add("game-over-img"),s.setAttribute("src",e),n.appendChild(s);const o=document.createElement("p");o.classList.add("game-over-message"),o.textContent=`${r}`,n.appendChild(o);const l=document.createElement("button");l.setAttribute("id","playAgainBtn"),l.innerText="Play Again",n.appendChild(l),document.body.appendChild(n),document.getElementById("playAgainBtn").addEventListener("click",(e=>{e.preventDefault(),window.location.reload()}))}e.exports={renderPlayerCreationEl:function(){const e=document.querySelector(".main-content-container");let t=document.createElement("div");t.classList.add("player-creation-container");let a=document.createElement("p");a.innerText="You are about to enter unfamiliar waters in an effort to neutralize enemy ships. Due to thick fog our strategy is simple, fire artillery and observe any contact. Intel suggests the enemy fleet contains 5 ships of varying sizes...\n  \n  Instructions:\n  \n  Using arial reconnaissance, order fire on mapped coordinates. Hits will reflect red, while misses will be blue. We are counting on you.";let r=document.createElement("form");r.setAttribute("name","player-creation-form"),r.setAttribute("class","player-creation-form");let n=document.createElement("input");n.setAttribute("id","playerName"),n.setAttribute("type","text"),n.setAttribute("min","1"),n.required=!0,n.setAttribute("max","25"),n.setAttribute("placeholder","Player Name");let i=document.createElement("button");i.setAttribute("id","playerSubmit"),i.setAttribute("type","submit"),i.setAttribute("for","player-creation-form"),i.innerText="Launch Fleet",t.appendChild(r),r.appendChild(a),r.appendChild(n),r.appendChild(i),e.appendChild(t)},generateGameboardEl:function(e){const t=[...e.board.grid],a=document.querySelector(".main-content-container"),r=document.createElement("div"),n=document.createElement("table");n.setAttribute("class","gameboard-table");const i=document.createElement("th");i.innerText=`${e.name}'s Fleet`,r.appendChild(i);for(let a=0;a<10;a++){const r=document.createElement("tr");r.setAttribute("class","gameboard-row");for(let n=0;n<10;n++){const i=10*a+n;if(i<t.length){const a=document.createElement("td");r.appendChild(a),a.setAttribute("data-x",`${t[i].x}`),a.setAttribute("data-y",`${t[i].y}`),a.setAttribute("data-attacked",`${t[i].attacked}`),a.setAttribute("data-ship",`${t[i].shipName}`),a.setAttribute("class","gameboard-tile"),"Computer"===e.name?a.classList.add("enemy-tile"):"Computer"!==e.name&&a.classList.add("player-tile")}}n.appendChild(r)}r.appendChild(n),a.appendChild(r)},handleHitsAndMisses:function(){document.querySelectorAll(".gameboard-tile").forEach((e=>{let t=e.getAttribute("data-attacked"),a=e.getAttribute("data-ship");"true"===t&&"undefined"===a&&e.classList.add("missed"),"true"===t&&"undefined"!==a&&e.classList.add("hit")}))},handlePlayerGrid:function(){document.querySelectorAll(".player-tile").forEach((e=>{"undefined"!==e.getAttribute("data-ship")&&e.classList.add("occupied")}))},checkGameOver:function(e,t){let a,r,i,s;!0===t.board.isLoser?(a="https://media.giphy.com/media/3o85xDZyvJPHLfgKXK/giphy.gif",r="You Win",i="winner",s="Operation successful, enemy fleet has been eliminated!",n(a,r,i,s)):!0===e.board.isLoser&&(a="https://media.giphy.com/media/3o6Ztn38eCMwTQIcs8/giphy.gif",r="You Lose",i="loser",s="War....war never changes...",n(a,r,i,s))}}},404:(e,t,a)=>{const{renderPlayerCreationEl:r,generateGameboardEl:n,handleHitsAndMisses:i,handlePlayerGrid:s,checkGameOver:o}=a(817),{player:l}=a(507),{computerLegalAttack:c}=a(496);e.exports={game:()=>({playerOneName:void 0,playerTwoName:"Computer",playerOne:void 0,PlayerTwo:void 0,init:function(){r(),this.cacheDom(),this.startEventListening()},cacheDom:function(){this.formContainer=document.querySelector(".player-creation-container"),this.formSubmitBtn=document.getElementById("playerSubmit"),this.formInput=document.getElementById("playerName")},startEventListening:function(){this.formSubmitBtn.addEventListener("click",(e=>{e.preventDefault(),this.playerOneName=this.formInput.value,this.formContainer.classList.add("hidden"),this.handleGameSetup()}))},handleGameSetup:function(){this.playerOne=l(this.playerOneName),this.PlayerTwo=l(this.playerTwoName),this.handlePlotting(),n(this.playerOne),n(this.PlayerTwo),s(),this.startAttackListening()},startAttackListening:function(){document.querySelectorAll(".enemy-tile").forEach((e=>{e.addEventListener("click",(e=>{e.target.setAttribute("data-attacked","true");let t=e.target.getAttribute("data-x"),a=e.target.getAttribute("data-y");this.PlayerTwo.board.receiveAttack(t,a);let r=c(this.playerOne);this.playerOne.board.receiveAttack(r.x,r.y),document.querySelectorAll(".player-tile").forEach((e=>{let t=e.getAttribute("data-x"),a=e.getAttribute("data-y");t===String(r.x)&&a===String(r.y)&&e.setAttribute("data-attacked","true")})),i(),o(this.playerOne,this.PlayerTwo)}),{once:!0})}))},handlePlotting:function(){this.playerOne.board.plotFleet(),this.PlayerTwo.board.plotFleet()}})}},498:(e,t,a)=>{const{ship:r}=a(643);e.exports={gameboard:()=>{let e=[];return{isLoser:!1,grid:(()=>{for(let t=0;t<10;t++)for(let a=0;a<10;a++)e.push({x:t,y:a,shipName:void 0,attacked:!1});return e})(),missedShots:[],hits:[],sunkShips:[],myFleet:[r("Carrier"),r("Battleship"),r("Destroyer"),r("Submarine"),r("Patrol Boat")],receiveAttack:function(e,t){console.log(`Hit logged at ${e},${t}`),this.grid.forEach((a=>{if(a.x==e&&a.y==t)if(a.attacked=!0,void 0===a.shipName)this.missedShots.push({x:e,y:t});else switch(a.shipName){case"Carrier":this.hits.push({x:e,y:t}),this.myFleet[0].hit();break;case"Battleship":this.hits.push({x:e,y:t}),this.myFleet[1].hit();break;case"Destroyer":this.hits.push({x:e,y:t}),this.myFleet[2].hit();break;case"Submarine":this.hits.push({x:e,y:t}),this.myFleet[3].hit();break;case"Patrol Boat":this.hits.push({x:e,y:t}),this.myFleet[4].hit()}})),this.checkSunkShips()},plotFleet:function(){this.myFleet.forEach((e=>{e.location.forEach((t=>{this.grid.forEach((a=>{a.x===t.x&&a.y===t.y&&(a.shipName=e.name)}))}))}))},checkSunkShips:function(){this.myFleet.forEach((e=>{!0!==e.sunk||this.sunkShips.includes(e.name)||this.sunkShips.push(String(e.name))})),this.toggleGameOver()},toggleGameOver:function(){5==this.sunkShips.length&&(this.isLoser=!0)}}}}},225:e=>{const t=()=>Math.floor(10*Math.random());e.exports={randomNumZeroToNine:t,randomDirection:()=>{let e;return e=t()<=4?"horizontal":"vertical",e},determineSafePath:(e,t)=>{let a;return"horizontal"===e?a=t.x<=4?"right":"left":"vertical"===e&&(a=t.y<=4?"down":"up"),a},removeMatchingObjects:function(e,t){return e.filter((e=>!t.some((t=>e.x===t.x&&e.y===t.y))))}}},507:(e,t,a)=>{const{gameboard:r}=a(498);e.exports={player:e=>({name:e,isTurn:!1,board:r()})}},643:e=>{e.exports={ship:e=>({name:e,length:(e=>{switch(e){case"Carrier":return Number(5);case"Battleship":return Number(4);case"Destroyer":case"Submarine":return Number(3);case"Patrol Boat":return Number(2);default:throw new Error("Invalid ship type provided")}})(e),hits:0,sunk:!1,location:function(e){switch(e){case"Carrier":return[{x:0,y:0},{x:0,y:1},{x:0,y:2},{x:0,y:3},{x:0,y:4}];case"Battleship":return[{x:9,y:2},{x:9,y:3},{x:9,y:4},{x:9,y:5}];case"Destroyer":return[{x:5,y:4},{x:6,y:4},{x:7,y:4}];case"Submarine":return[{x:8,y:0},{x:8,y:1},{x:8,y:2}];case"Patrol Boat":return[{x:5,y:7},{x:6,y:7}];default:throw new Error("Error generating coordinates")}}(e),hit:function(){this.hits+=1,console.log("Hit detected!"),this.isSunk()},isSunk:function(){this.hits===this.length&&(this.sunk=!0,console.log(`${this.name} has been sunk`))}})}}},t={};function a(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,a),i.exports}(()=>{const{game:e}=a(404);e().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,